# Docker
# Build and push an image to Azure Container Registry
# https://docs.microsoft.com/azure/devops/pipelines/languages/docker

trigger:
- master

resources:
- repo: self

variables:
  # Container registry service connection established during pipeline creation
  dockerRegistryServiceConnection: 'b548b736-1813-4e17-888a-20db15a04abf'
  imageRepository: 'niruninjareactnginxdocker'
  containerRegistry: 'ninjareg.azurecr.io'
  dockerfilePath: '$(Build.SourcesDirectory)/Dockerfile'
  tag: '$(Build.BuildId)'

  # Agent VM image name
  vmImageName: 'ubuntu-latest'

stages:
- stage: Build
  displayName: Build and push stage
  jobs:
  - job: Build
    displayName: Build
    pool:
      vmImage: $(vmImageName)
    steps:
    - task: Docker@2
      displayName: Build and push an image to container registry
      inputs:
        command: buildAndPush
        repository: $(imageRepository)
        dockerfile: $(dockerfilePath)
        containerRegistry: $(dockerRegistryServiceConnection)
        tags: |
          $(tag)
          
    - task: Anchore@0
      inputs:
        image: '$(containerRegistry)/$(imageRepository):$(tag)'
        dockerfile: '$(Build.SourcesDirectory)/Dockerfile'
        failBuild: true
    
    - script: |
        echo $(policyStatus)

        echo $(billOfMaterials)
        cat $(billOfMaterials)

#        echo $(vulnerabilities)
#        cat $(vulnerabilities)    

#    - task: dependency-check-build-task@6
#      inputs:
#        projectName: 'Dependency Check'
#        scanPath: '*'
#        format: 'JUNIT'

#    - task: PublishTestResults@2
#      inputs:
#        testResultsFormat: 'JUnit'
#        testResultsFiles: 'dependency-check/*junit.xml'
#        searchFolder: '$(Common.TestResultsDirectory)'
#        testRunTitle: 'Dependency Check'

    - task: PublishTestResults@2
      inputs:
        testResultsFormat: 'JUNIT'
        testResultsFiles: 'anchore-reports/*.json'
        searchFolder: '$(Common.TestResultsDirectory)'
        testRunTitle: 'Anchore'
